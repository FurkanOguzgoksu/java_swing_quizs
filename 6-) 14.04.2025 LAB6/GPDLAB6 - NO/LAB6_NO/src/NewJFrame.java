import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author nurul
 */
public class NewJFrame extends javax.swing.JFrame {


    /**
     * Creates new form NO
     */
    public NewJFrame() {
        initComponents();        
        txtOgrenciBilgileri.setEditable(false);
        txtSonuclar.setEditable(false);
        txtGecmeNotu.setEditable(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOgrenciBilgileri = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSonuclar = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        txtGecmeNotu = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        sonuc = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        dosyaMenu = new javax.swing.JMenu();
        listeOku = new javax.swing.JMenuItem();
        bolumKaydet = new javax.swing.JMenuItem();
        cikis = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("231213000");

        txtOgrenciBilgileri.setColumns(20);
        txtOgrenciBilgileri.setRows(5);
        jScrollPane1.setViewportView(txtOgrenciBilgileri);

        jLabel1.setText("Öğrenci Bilgileri");

        txtSonuclar.setColumns(20);
        txtSonuclar.setRows(5);
        jScrollPane2.setViewportView(txtSonuclar);

        jLabel2.setText("Sonuçlar");

        jLabel3.setText("Geçme Notu Giriniz");

        sonuc.setAutoscrolls(true);
        sonuc.setLabel(" Sonuçlar ->");
        sonuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sonucActionPerformed(evt);
            }
        });

        dosyaMenu.setText("DOSYA");

        listeOku.setText("Öğrenci Listesi Oku");
        listeOku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeOkuActionPerformed(evt);
            }
        });
        dosyaMenu.add(listeOku);

        bolumKaydet.setText("Bölüme Göre Kaydet");
        bolumKaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bolumKaydetActionPerformed(evt);
            }
        });
        dosyaMenu.add(bolumKaydet);

        cikis.setText("Çıkış");
        cikis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cikisActionPerformed(evt);
            }
        });
        dosyaMenu.add(cikis);

        jMenuBar1.add(dosyaMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtGecmeNotu, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sonuc, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 21, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(sonuc)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtGecmeNotu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listeOkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeOkuActionPerformed
        // TODO add your handling code here:
              
        if (jFileChooser1.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
        try {
            FileInputStream fis = new FileInputStream(jFileChooser1.getSelectedFile().getAbsolutePath());
            InputStreamReader isr = new InputStreamReader(fis, StandardCharsets.UTF_8); // Türkçe karakter desteği
            BufferedReader br = new BufferedReader(isr);
            String line;
            txtOgrenciBilgileri.setText("");
            while ((line = br.readLine()) != null) {
                txtOgrenciBilgileri.append(line + "\n");
            }
            br.close();                
            txtGecmeNotu.setEditable(true);
            JOptionPane.showMessageDialog(null, "Öğrenci bilgileri başarıyla okundu!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Dosya okunamadı: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_listeOkuActionPerformed

    private void sonucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sonucActionPerformed
        // TODO add your handling code here:
        txtSonuclar.setText("");         
        int gecmeNotu = Integer.parseInt(txtGecmeNotu.getText());
        
        try
        {
            String[] satirlar = txtOgrenciBilgileri.getText().split("\n");
        
            for (int i = 0; i < satirlar.length; i++) 
            {
                String[] bilgiler = satirlar[i].split(",");
                if (bilgiler.length == 3) 
                {                  
                    if (Integer.parseInt(bilgiler[1]) >= gecmeNotu)                                            
                        txtSonuclar.append(satirlar[i] + "\n");                    
                }
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Hata: " + e.getMessage());
        }    
    }//GEN-LAST:event_sonucActionPerformed

    private void cikisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cikisActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_cikisActionPerformed

    private void bolumKaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bolumKaydetActionPerformed
        // TODO add your handling code here:
        if (jFileChooser1.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) 
        {
            try
            {
                FileOutputStream fos = new FileOutputStream(jFileChooser1.getSelectedFile().getAbsolutePath(), false);
                OutputStreamWriter osr = new OutputStreamWriter(fos,StandardCharsets.UTF_8);
                BufferedWriter bw = new BufferedWriter(osr);
                String[] satirlar = txtSonuclar.getText().split("\n");
                for(int i=0;i<satirlar.length;i++)
                    bw.write(satirlar[i] + "\t\n");
                bw.close(); //yazılan dosya kapatılmalıdır
                JOptionPane.showMessageDialog(null, "Dosyaya yazıldı!", "", JOptionPane.INFORMATION_MESSAGE);
            }
            catch (IOException hata)
            {
                JOptionPane.showMessageDialog(null, hata.getMessage());        
            }                    
        }
    }//GEN-LAST:event_bolumKaydetActionPerformed
                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new NewJFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem bolumKaydet;
    private javax.swing.JMenuItem cikis;
    private javax.swing.JMenu dosyaMenu;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem listeOku;
    private javax.swing.JButton sonuc;
    private javax.swing.JTextField txtGecmeNotu;
    private javax.swing.JTextArea txtOgrenciBilgileri;
    private javax.swing.JTextArea txtSonuclar;
    // End of variables declaration//GEN-END:variables
}
